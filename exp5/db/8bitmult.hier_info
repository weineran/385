|my8bitmult
CLR_LDB => CLR_LDB.IN1
Reset => Reset.IN2
Run => Run.IN1
Clk => Clk.IN5
Reset2 => Reset2.IN1
Switches[0] => Switches[0].IN2
Switches[1] => Switches[1].IN2
Switches[2] => Switches[2].IN2
Switches[3] => Switches[3].IN2
Switches[4] => Switches[4].IN2
Switches[5] => Switches[5].IN2
Switches[6] => Switches[6].IN2
Switches[7] => Switches[7].IN2


|my8bitmult|control:b2v_inst
Clk => curr_state~1.DATAIN
Reset => curr_state~3.DATAIN
Run => next_state.OUTPUTSELECT
Run => next_state.OUTPUTSELECT
Run => next_state.OUTPUTSELECT
Run => next_state.OUTPUTSELECT
Run => next_state.OUTPUTSELECT
Run => next_state.OUTPUTSELECT
Run => next_state.OUTPUTSELECT
Run => next_state.OUTPUTSELECT
Run => next_state.OUTPUTSELECT
Run => next_state.OUTPUTSELECT
Run => next_state.OUTPUTSELECT
Run => next_state.OUTPUTSELECT
Run => next_state.OUTPUTSELECT
Run => next_state.OUTPUTSELECT
Run => next_state.OUTPUTSELECT
Run => next_state.OUTPUTSELECT
Run => next_state.OUTPUTSELECT
Run => next_state.OUTPUTSELECT
Run => next_state.OUTPUTSELECT
Run => next_state.OUTPUTSELECT
Run => next_state.OUTPUTSELECT
Run => next_state.OUTPUTSELECT
Run => next_state.OUTPUTSELECT
Run => next_state.OUTPUTSELECT
Run => next_state.OUTPUTSELECT
Run => next_state.OUTPUTSELECT
Run => next_state.OUTPUTSELECT
Run => next_state.OUTPUTSELECT
Run => next_state.OUTPUTSELECT
Run => next_state.OUTPUTSELECT
Run => next_state.OUTPUTSELECT
Run => next_state.OUTPUTSELECT
ClearA_LoadB => Clr_ld.DATAB
M => Selector16.IN3
M => Sub.DATAB
AhexU[0] <= <GND>
AhexU[1] <= <GND>
AhexU[2] <= <GND>
AhexU[3] <= <GND>
AhexU[4] <= <GND>
AhexU[5] <= <GND>
AhexU[6] <= <GND>
AhexL[0] <= <GND>
AhexL[1] <= <GND>
AhexL[2] <= <GND>
AhexL[3] <= <GND>
AhexL[4] <= <GND>
AhexL[5] <= <GND>
AhexL[6] <= <GND>
BhexU[0] <= <GND>
BhexU[1] <= <GND>
BhexU[2] <= <GND>
BhexU[3] <= <GND>
BhexU[4] <= <GND>
BhexU[5] <= <GND>
BhexU[6] <= <GND>
Aval[0] <= <GND>
Aval[1] <= <GND>
Aval[2] <= <GND>
Aval[3] <= <GND>
Aval[4] <= <GND>
Aval[5] <= <GND>
Aval[6] <= <GND>
Aval[7] <= <GND>
Bval[0] <= <GND>
Bval[1] <= <GND>
Bval[2] <= <GND>
Bval[3] <= <GND>
Bval[4] <= <GND>
Bval[5] <= <GND>
Bval[6] <= <GND>
Bval[7] <= <GND>
X <= <GND>
Clr_ld <= Clr_ld.DB_MAX_OUTPUT_PORT_TYPE
Shift <= WideOr16.DB_MAX_OUTPUT_PORT_TYPE
Add <= Selector16.DB_MAX_OUTPUT_PORT_TYPE
Sub <= Sub.DB_MAX_OUTPUT_PORT_TYPE


|my8bitmult|ADD_SUB9:b2v_inst1
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A8.IN2
B[0] => BB.IN0
B[1] => BB.IN0
B[2] => BB.IN0
B[3] => BB.IN0
B[4] => BB.IN0
B[5] => BB.IN0
B[6] => BB.IN0
B[7] => BB.IN0
fn => fn.IN1
S[0] <= full_adder:FA0.s
S[1] <= full_adder:FA1.s
S[2] <= full_adder:FA2.s
S[3] <= full_adder:FA3.s
S[4] <= full_adder:FA4.s
S[5] <= full_adder:FA5.s
S[6] <= full_adder:FA6.s
S[7] <= full_adder:FA7.s
S[8] <= full_adder:FA8.s


|my8bitmult|ADD_SUB9:b2v_inst1|full_adder:FA0
x => s.IN0
x => c.IN0
x => c.IN0
y => s.IN1
y => c.IN1
y => c.IN0
z => s.IN1
z => c.IN1
z => c.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
c <= c.DB_MAX_OUTPUT_PORT_TYPE


|my8bitmult|ADD_SUB9:b2v_inst1|full_adder:FA1
x => s.IN0
x => c.IN0
x => c.IN0
y => s.IN1
y => c.IN1
y => c.IN0
z => s.IN1
z => c.IN1
z => c.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
c <= c.DB_MAX_OUTPUT_PORT_TYPE


|my8bitmult|ADD_SUB9:b2v_inst1|full_adder:FA2
x => s.IN0
x => c.IN0
x => c.IN0
y => s.IN1
y => c.IN1
y => c.IN0
z => s.IN1
z => c.IN1
z => c.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
c <= c.DB_MAX_OUTPUT_PORT_TYPE


|my8bitmult|ADD_SUB9:b2v_inst1|full_adder:FA3
x => s.IN0
x => c.IN0
x => c.IN0
y => s.IN1
y => c.IN1
y => c.IN0
z => s.IN1
z => c.IN1
z => c.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
c <= c.DB_MAX_OUTPUT_PORT_TYPE


|my8bitmult|ADD_SUB9:b2v_inst1|full_adder:FA4
x => s.IN0
x => c.IN0
x => c.IN0
y => s.IN1
y => c.IN1
y => c.IN0
z => s.IN1
z => c.IN1
z => c.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
c <= c.DB_MAX_OUTPUT_PORT_TYPE


|my8bitmult|ADD_SUB9:b2v_inst1|full_adder:FA5
x => s.IN0
x => c.IN0
x => c.IN0
y => s.IN1
y => c.IN1
y => c.IN0
z => s.IN1
z => c.IN1
z => c.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
c <= c.DB_MAX_OUTPUT_PORT_TYPE


|my8bitmult|ADD_SUB9:b2v_inst1|full_adder:FA6
x => s.IN0
x => c.IN0
x => c.IN0
y => s.IN1
y => c.IN1
y => c.IN0
z => s.IN1
z => c.IN1
z => c.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
c <= c.DB_MAX_OUTPUT_PORT_TYPE


|my8bitmult|ADD_SUB9:b2v_inst1|full_adder:FA7
x => s.IN0
x => c.IN0
x => c.IN0
y => s.IN1
y => c.IN1
y => c.IN0
z => s.IN1
z => c.IN1
z => c.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
c <= c.DB_MAX_OUTPUT_PORT_TYPE


|my8bitmult|ADD_SUB9:b2v_inst1|full_adder:FA8
x => s.IN0
x => c.IN0
x => c.IN0
y => s.IN1
y => c.IN1
y => c.IN0
z => s.IN1
z => c.IN1
z => c.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
c <= c.DB_MAX_OUTPUT_PORT_TYPE


|my8bitmult|reg_8:b2v_inst10
Clk => Data_out[0]~reg0.CLK
Clk => Data_out[1]~reg0.CLK
Clk => Data_out[2]~reg0.CLK
Clk => Data_out[3]~reg0.CLK
Clk => Data_out[4]~reg0.CLK
Clk => Data_out[5]~reg0.CLK
Clk => Data_out[6]~reg0.CLK
Clk => Data_out[7]~reg0.CLK
Reset => Data_out[0]~reg0.ACLR
Reset => Data_out[1]~reg0.ACLR
Reset => Data_out[2]~reg0.ACLR
Reset => Data_out[3]~reg0.ACLR
Reset => Data_out[4]~reg0.ACLR
Reset => Data_out[5]~reg0.ACLR
Reset => Data_out[6]~reg0.ACLR
Reset => Data_out[7]~reg0.ACLR
Reset => Data_out[0].IN0
Shift_In => Data_out[7]~reg0.DATAIN
Load => Data_out[0].IN1
Shift_En => Data_out[7]~reg0.ENA
Shift_En => Data_out[6]~reg0.ENA
Shift_En => Data_out[5]~reg0.ENA
Shift_En => Data_out[4]~reg0.ENA
Shift_En => Data_out[3]~reg0.ENA
Shift_En => Data_out[2]~reg0.ENA
Shift_En => Data_out[1]~reg0.ENA
Shift_En => Data_out[0]~reg0.ENA
D[0] => Data_out[0]~reg0.ADATA
D[1] => Data_out[1]~reg0.ADATA
D[2] => Data_out[2]~reg0.ADATA
D[3] => Data_out[3]~reg0.ADATA
D[4] => Data_out[4]~reg0.ADATA
D[5] => Data_out[5]~reg0.ADATA
D[6] => Data_out[6]~reg0.ADATA
D[7] => Data_out[7]~reg0.ADATA
Shift_Out <= Data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_out[0] <= Data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_out[1] <= Data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_out[2] <= Data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_out[3] <= Data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_out[4] <= Data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_out[5] <= Data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_out[6] <= Data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_out[7] <= Data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|my8bitmult|reg_8:b2v_inst2
Clk => Data_out[0]~reg0.CLK
Clk => Data_out[1]~reg0.CLK
Clk => Data_out[2]~reg0.CLK
Clk => Data_out[3]~reg0.CLK
Clk => Data_out[4]~reg0.CLK
Clk => Data_out[5]~reg0.CLK
Clk => Data_out[6]~reg0.CLK
Clk => Data_out[7]~reg0.CLK
Reset => Data_out[0]~reg0.ACLR
Reset => Data_out[1]~reg0.ACLR
Reset => Data_out[2]~reg0.ACLR
Reset => Data_out[3]~reg0.ACLR
Reset => Data_out[4]~reg0.ACLR
Reset => Data_out[5]~reg0.ACLR
Reset => Data_out[6]~reg0.ACLR
Reset => Data_out[7]~reg0.ACLR
Reset => Data_out[0].IN0
Shift_In => Data_out[7]~reg0.DATAIN
Load => Data_out[0].IN1
Shift_En => Data_out[7]~reg0.ENA
Shift_En => Data_out[6]~reg0.ENA
Shift_En => Data_out[5]~reg0.ENA
Shift_En => Data_out[4]~reg0.ENA
Shift_En => Data_out[3]~reg0.ENA
Shift_En => Data_out[2]~reg0.ENA
Shift_En => Data_out[1]~reg0.ENA
Shift_En => Data_out[0]~reg0.ENA
D[0] => Data_out[0]~reg0.ADATA
D[1] => Data_out[1]~reg0.ADATA
D[2] => Data_out[2]~reg0.ADATA
D[3] => Data_out[3]~reg0.ADATA
D[4] => Data_out[4]~reg0.ADATA
D[5] => Data_out[5]~reg0.ADATA
D[6] => Data_out[6]~reg0.ADATA
D[7] => Data_out[7]~reg0.ADATA
Shift_Out <= Data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_out[0] <= Data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_out[1] <= Data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_out[2] <= Data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_out[3] <= Data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_out[4] <= Data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_out[5] <= Data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_out[6] <= Data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_out[7] <= Data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|my8bitmult|DeeFF:b2v_inst5
Clk => Q~reg0.CLK
Load => Q~reg0.ENA
Reset => Q~reg0.ACLR
D => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|my8bitmult|reg_8:b2v_inst9
Clk => Data_out[0]~reg0.CLK
Clk => Data_out[1]~reg0.CLK
Clk => Data_out[2]~reg0.CLK
Clk => Data_out[3]~reg0.CLK
Clk => Data_out[4]~reg0.CLK
Clk => Data_out[5]~reg0.CLK
Clk => Data_out[6]~reg0.CLK
Clk => Data_out[7]~reg0.CLK
Reset => Data_out[0]~reg0.ACLR
Reset => Data_out[1]~reg0.ACLR
Reset => Data_out[2]~reg0.ACLR
Reset => Data_out[3]~reg0.ACLR
Reset => Data_out[4]~reg0.ACLR
Reset => Data_out[5]~reg0.ACLR
Reset => Data_out[6]~reg0.ACLR
Reset => Data_out[7]~reg0.ACLR
Reset => Data_out[0].IN0
Shift_In => Data_out[7]~reg0.DATAIN
Load => Data_out[0].IN1
Shift_En => Data_out[7]~reg0.ENA
Shift_En => Data_out[6]~reg0.ENA
Shift_En => Data_out[5]~reg0.ENA
Shift_En => Data_out[4]~reg0.ENA
Shift_En => Data_out[3]~reg0.ENA
Shift_En => Data_out[2]~reg0.ENA
Shift_En => Data_out[1]~reg0.ENA
Shift_En => Data_out[0]~reg0.ENA
D[0] => Data_out[0]~reg0.ADATA
D[1] => Data_out[1]~reg0.ADATA
D[2] => Data_out[2]~reg0.ADATA
D[3] => Data_out[3]~reg0.ADATA
D[4] => Data_out[4]~reg0.ADATA
D[5] => Data_out[5]~reg0.ADATA
D[6] => Data_out[6]~reg0.ADATA
D[7] => Data_out[7]~reg0.ADATA
Shift_Out <= Data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_out[0] <= Data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_out[1] <= Data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_out[2] <= Data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_out[3] <= Data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_out[4] <= Data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_out[5] <= Data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_out[6] <= Data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_out[7] <= Data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


